basePath: /
definitions:
  dto.Film:
    properties:
      film_id:
        type: integer
      likes:
        type: integer
      order:
        type: integer
      photo_cut_count:
        type: integer
      title:
        type: string
      user_id:
        type: string
    type: object
  dto.FilmCreationRequest:
    properties:
      title:
        type: string
      user_id:
        type: string
    required:
    - title
    - user_id
    type: object
  dto.FilmDetailResponse:
    properties:
      film_id:
        type: integer
      likes:
        type: integer
      order:
        type: integer
      photo_cut_count:
        type: integer
      photo_cuts:
        items:
          $ref: '#/definitions/dto.PhotoCutDetailResponse'
        type: array
      title:
        type: string
      user_id:
        type: string
    type: object
  dto.FilmUpdateRequest:
    properties:
      film_id:
        type: integer
      title:
        type: string
    required:
    - film_id
    - title
    type: object
  dto.PhotoCutDetailResponse:
    properties:
      created_at:
        type: string
      film_id:
        type: integer
      image:
        type: string
      likes:
        type: integer
      link:
        type: string
      text:
        type: string
      title:
        type: string
    type: object
  dto.UserCreationRequest:
    properties:
      name:
        type: string
      password:
        type: string
      user_id:
        type: string
    required:
    - name
    - password
    - user_id
    type: object
  dto.UserCreationResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      name:
        type: string
      text:
        type: string
      themeColor:
        type: string
      userID:
        type: string
      visitors:
        type: integer
    type: object
  dto.UserDetailResponse:
    properties:
      name:
        type: string
      profile_img:
        type: string
      text:
        type: string
      user_id:
        type: string
      visitors:
        type: integer
    type: object
  dto.UserLoginRequest:
    properties:
      password:
        type: string
      user_id:
        type: string
    required:
    - password
    - user_id
    type: object
host: https://api.grafi.cc
info:
  contact:
    email: chaewonkong@gmail.com
  description: grafi API
  title: grafi API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: healthcheck
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: healthcheck
      tags:
      - default
  /auth:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: user_id, password로 로그인
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDetailResponse'
        "400":
          description: 'Key: ''UserLoginRequest.Password'' Error:Field validation
            for ''Password'' failed on the ''required'' tag'
          schema:
            type: string
        "401":
          description: Anauthorized
          schema:
            type: string
      summary: Login
      tags:
      - auth
  /films:
    get:
      consumes:
      - application/json
      description: Find All Films
      parameters:
      - description: user_id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Film'
            type: array
        "400":
          description: 값을 누락하고 보냈거나, 값의 타입이 잘못된 경우
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 회원의 모든 필름 가져오기
      tags:
      - film
    post:
      consumes:
      - application/json
      description: Create Film
      parameters:
      - description: user_id, title
        in: body
        name: film
        required: true
        schema:
          $ref: '#/definitions/dto.FilmCreationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.FilmDetailResponse'
        "400":
          description: 값을 누락하고 보냈거나, 값의 타입이 잘못된 경우
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 필름 생성
      tags:
      - film
    put:
      consumes:
      - application/json
      description: Edit Film
      parameters:
      - description: film_id, title
        in: body
        name: film
        required: true
        schema:
          $ref: '#/definitions/dto.FilmUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: 값을 누락하고 보냈거나, 값의 타입이 잘못된 경우
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 필름 수정
      tags:
      - film
  /films/{film_id}:
    delete:
      consumes:
      - application/json
      description: Delete Film
      parameters:
      - description: film_id
        in: path
        name: film_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: 값을 누락하고 보냈거나, 값의 타입이 잘못된 경우
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 필름 삭제
      tags:
      - film
    get:
      consumes:
      - application/json
      description: Find Film by ID
      parameters:
      - description: film_id
        in: path
        name: film_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.FilmDetailResponse'
        "400":
          description: 값을 누락하고 보냈거나, 값의 타입이 잘못된 경우
          schema:
            type: string
        "404":
          description: 'Conflic: 해당 id의 film이 존재하지 않는 경우'
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 필름 ID로 필름 정보 가져오기
      tags:
      - film
  /user:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: user_id, password, name(닉네임)
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserCreationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserCreationResponse'
        "400":
          description: 값을 누락하고 보냈거나, 값의 타입이 잘못된 경우
          schema:
            type: string
        "409":
          description: 'Conflict: 이미 id가 존재하는 경우'
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: user
      tags:
      - user
  /user/{user_id}:
    get:
      consumes:
      - application/json
      description: Find User by ID
      parameters:
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDetailResponse'
        "400":
          description: 값을 누락하고 보냈거나, 값의 타입이 잘못된 경우
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: user
      tags:
      - user
swagger: "2.0"
